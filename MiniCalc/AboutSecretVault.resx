<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEBLAEsAAD/2wBDAAYEBQYFBAYGBQYHBwYIChELCgkJChUPEAwRGRYaGhgWGBcb
        HyghGx0lHhcYIi8jJSkqLC0sGyExNDArNCgrLCv/2wBDAQcHBwoJChQLCxQrHBgcHCsrKysrKysrKysr
        KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCACGAFoDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDN8LzWQ0eKVrlVljXBRx0jP/s3pXZTr0rdTjaN21uLd2SWGWVk
        kQceXnAranXpX6mbRpRXEYACxTHHTEVXKtC/u3M2iYXC/wDPC4/790vbBYc1wuP9Rcf9+6PbFIhe5H/P
        vcH/ALZ0c3NqDREbsY/49rjr/wA86YWKd5cxuql47pSr8fu6B2Klxcrk/ubn/v3RYDGvLmMAkxTAj+8l
        TItI5zVb+CKEyOJQD221hLYqxQ3xHnDc1HMVynX2ekrc+C5EdmE80sRaQHDZGcEGt4c1hNmppizI/DsX
        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
</value>
  </data>
</root>